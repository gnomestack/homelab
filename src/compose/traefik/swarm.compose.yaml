services:
  node_01:
    image: "traefik:latest"
    hostname: "traefik"
    #restart: "unless-stopped"
    #container_name: "traefik"
    environment:
      CLOUDFLARE_DNS_API_TOKEN: "${CF_API_TOKEN}"

    dns:
      - 1.1.1.1
      - 1.0.0.1
    deploy:
      restart_policy:
        condition: any
        delay: 5s
        window: 120s
      mode: global
      update_config:
        parallelism: 1
        delay: 10s
      placement:
        constraints:
        #  - node.labels.vnet-frontend.traefik-certificates == true
          - node.role == manager
      labels:
        # traefik.enable is required because we don't expose all containers automatically
        - "traefik.enable=true"
        #- traefik.docker.network=vnet-frontend
        #- traefik.constraint-label=vnet-frontend
        - "traefik.http.routers.traefik.entrypoints=https"
        - "traefik.http.routers.traefik.service=api@internal"
        - "traefik.http.routers.traefik.rule=Host(`traefik.${TLD?TLD not set}`)"
        - "traefik.http.routers.traefik.tls=true"
        - "traefik.http.routers.traefik.tls.certresolver=le"
        - "traefik.http.middlewares.traefik.redirectscheme.scheme=https"
        - traefik.http.services.traefik.loadbalancer.server.port=8080
    command:
      - "--log.level=DEBUG"
      - "--api=true"
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--providers.docker.network=vnet_frontend"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.swarmModeRefreshSeconds=5"
      - "--providers.docker.watch=true"
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--entrypoints.https.http.tls.certresolver=le"
      - "--entrypoints.postgres.address=:5432"
      - "--entrypoints.redis.address=:6379"
      - "--entrypoints.mssql.address=:1433"
      - "--entrypoints.influxdb.address=:8086"
      - "--entrypoints.mysql.address=:3306"
      - "--entrypoints.time.address=:123"
      - "--entrypoints.mongodb.address=:27017"
      - "--entrypoints.mqtt.address=:1883"
      - "--entrypoints.mqtt_websocket.address=:9001"
      - "--entrypoints.rabbitmq.address=:5672"
      - "--entrypoints.rabbitmq_management.address=:15672"
      #- "--providers.docker.constraints=Label(`traefik.constraint-label`, `vnet-frontend`)"
      - "--certificatesResolvers.le.acme.dnschallenge=true"
      - "--certificatesResolvers.le.acme.dnschallenge.provider=cloudflare"
      - "--certificatesResolvers.le.acme.dnschallenge.resolvers=1.1.1.1:53,1.0.0.1:53"
      - "--certificatesResolvers.le.acme.dnschallenge.delaybeforecheck=20"
      #- "--certificatesResolvers.le.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesResolvers.le.acme.email=${ACME_EMAIL?ACME_EMAIL is not set}"
  
      - "--certificatesResolvers.le.acme.storage=/acme/acme.json"
    

      # - "--entrypoints.influxdb.address=:8086"
      # - "--entrypoints.mysql.address=:3306",
      # - "--entrypoints.mongodb.address=:27017",
      # - "--entryPoints.web.http.redirections.entryPoint.to=https",
      # - "--entryPoints.web.http.redirections.entryPoint.scheme=https",
      # - "--entryPoints.web.http.redirections.entrypoint.permanent=true",
      - "--log.filePath=/var/log/traefik/traefik.log"
      - "--accessLog.filePath=/var/log/traefik/access.log"
    ports:
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
      - target: 8080
        published: 8080
        protocol: tcp
        mode: host
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "${TRAEFIK_ACME}:/acme"
      - "${TRAEFIK_LOGS}:/var/log/traefik"

    networks:
      vnet_frontend:
        ipv4_address: 172.19.0.2

networks:
  vnet_frontend:
    external: true
    name: vnet_frontend
  vnet_backend:
    external: true
    name: vnet_backend