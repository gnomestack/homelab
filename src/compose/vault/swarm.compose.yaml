services:
  node_01:
    image: hashicorp/vault
    hostname: vault_01
    restart: always
    
    environment:
      VAULT_ADDR: "http://${VM_INFRA_IP}:8200"
      VAULT_API_ADDR: "http://${VM_INFRA_IP}:8200"
      VAULT_LOCAL_CONFIG: |
          {
            "backend": {
              "consul": {
                "address": "consul_01:8500",
                "path": "vault/"
              }
            },
            "listener": [{
                "tcp": {
                  "address": "0.0.0.0:8200",
                  "tls_disable": true, 
                }
            }], 
            "default_lease_ttl": "168h", 
            "max_lease_ttl": "720h",
            "ui": true
          }
    expose:
      - 8200
    cap_add:
      - IPC_LOCK
    deploy:
      restart_policy:
        condition: any
      
      placement:
        constraints:
          - node.hostname == ${VM_INFRA_NAME}
      labels:
        # traefik.enable is required because we don't expose all containers automatically
        - traefik.enable=true
        - traefik.http.routers.vault.entrypoints=https
        - traefik.http.routers.vault.rule=Host(`vault.${TLD?TLD not set}`)
        - traefik.http.routers.vault.tls=true
        - traefik.http.routers.vault.tls.certresolver=le
        - traefik.http.services.vault.loadbalancer.server.port=8200
    command: server
    volumes:
      - ${VAULT_POLICIES}:/vault/policies
      - ${VAULT_DATA}:/vault/data
      - ${VAULT_LOGS}:/vault/logs
    networks:
      - vnet_frontend

networks:
  vnet_frontend:
    external: true
    name: vnet_frontend
  vnet_backend:
    external: true
    name: vnet_backend