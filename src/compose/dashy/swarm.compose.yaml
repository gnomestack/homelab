services:
  app:
    image: lissy93/dashy:latest
    hostname: dashy
    restart: always
    environment:
      NODE_ENV: production
      TZ: UTC
      UID: 1000
      GID: 1000
    expose:
      - 80
    deploy:
      mode: global
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.hostname == ${VM_APPS1_NAME?VM_APPS1_NAME not set}
      labels:
        # traefik.enable is required because we don't expose all containers automatically
        - traefik.enable=true
        - traefik.http.routers.dashy.entrypoints=https
        - traefik.http.routers.dashy.rule=Host(`dashy.${TLD?TLD not set}`)
        - traefik.http.routers.dashy.tls=true
        - traefik.http.routers.dashy.tls.certresolver=le
        - traefik.http.services.dashy.loadbalancer.server.port=80
    healthcheck:
      test: [ 'CMD', 'node', '/app/services/healthcheck' ]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    volumes:
      - "${DASHY_PUBLIC}/conf.yml:/app/public/conf.yml"
    networks:
      - vnet_frontend

networks:
  vnet_frontend:
    external: true